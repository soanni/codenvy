box      = 'gwhorley/rhel72-x86_64'

ram = '6072'
node_ram = '1512' # should be > 1GB
cpus     = '2'

# Register RHEL subscription
$script = <<-SHELL
sudo subscription-manager register --username riuvshin@codenvy.com --password codenvy --auto-attach
sudo subscription-manager repos --enable=rhel-7-server-optional-rpms
sudo subscription-manager repos --enable=rhel-7-server-extras-rpms
SHELL

Vagrant.configure("2") do |config|
    config.vm.box = box
    config.ssh.insert_key = false

    ###################
    # PUPPET MASTER INSTANCE
    ###################
    config.vm.define :master do |master_instance_config|
    instance_name = 'master'
    hostname = 'codenvy.onprem'
    master_instance_config.vm.host_name = hostname
    master_instance_config.vm.network :private_network, ip: "192.168.56.110"
    master_instance_config.vm.network "forwarded_port", guest: 5005, host: 5005

    master_instance_config.vm.provider :virtualbox do |vbox|
    vbox.customize [
    'modifyvm', :id,
    '--name', instance_name,
    '--memory', ram,
    '--cpus', cpus
    ]
    end

    master_instance_config.vm.provision "shell", inline: $script
    end

    ###################
    # NODE 1 INSTANCE
    ###################
    config.vm.define :node1 do |node1_instance_config|
    hostname = 'node1'
    domain = 'codenvy.onprem'
    node1_instance_config.vm.host_name = hostname + '.' + domain
    node1_instance_config.vm.network :private_network, ip: "192.168.56.15"
    node1_instance_config.vm.provider :virtualbox do |vbox|
    vbox.customize [
    'modifyvm', :id,
    '--name', hostname,
    '--memory', node_ram,
    '--cpus', cpus
    ]
    end

    node1_instance_config.vm.provision "shell", inline: $script
    end

    ###################
    # NODE 2 INSTANCE
    ###################
    config.vm.define :node2 do |node2_instance_config|
    hostname = 'node2'
    domain = 'codenvy.onprem'
    node2_instance_config.vm.host_name = hostname + '.' + domain
    node2_instance_config.vm.network :private_network, ip: "192.168.56.20"
    node2_instance_config.vm.provider :virtualbox do |vbox|
    vbox.customize [
    'modifyvm', :id,
    '--name', hostname,
    '--memory', node_ram,
    '--cpus', cpus
    ]
    end

    node2_instance_config.vm.provision "shell", inline: $script
    end

    ##################
    # HOSTS RULES
    ##################
    config.vm.provision "shell", inline: "echo -e \"nameserver 172.19.20.192\n\" >> /etc/resolv.conf"

    config.vm.provision :hosts do |config|
    config.add_host '192.168.56.15', ['node1.codenvy.onprem']
    config.add_host '192.168.56.20', ['node2.codenvy.onprem']
    config.add_host '192.168.56.110', ['codenvy.onprem']
    end

    # run some script before the guest is destroyed;.
    # execute next command to install 'vagrant-trigger' plugin to be able to trigger event: "vagrant plugin install vagrant-triggers"
    config.trigger.before :destroy do
        run_remote "bash -c 'sudo subscription-manager unregister'"
    end

end
